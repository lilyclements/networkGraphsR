% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/replace_ids_with_labels.R
\name{replace_ids_with_labels}
\alias{replace_ids_with_labels}
\title{Replace IDs with Descriptive Labels}
\usage{
replace_ids_with_labels(
  lookup_table,
  id_col = "__id",
  label_col = "name_id",
  target_data,
  target_col = "resp_person"
)
}
\arguments{
\item{lookup_table}{A data frame containing the mapping between IDs and labels.}

\item{id_col}{The column name in \code{lookup_table} that contains the unique IDs.
Defaults to \code{"__id"}.}

\item{label_col}{The column name in \code{lookup_table} that contains the
corresponding descriptive labels. Defaults to \code{"name_id"}.}

\item{target_data}{The data frame containing the column whose values
should be replaced.}

\item{target_col}{The name of the column in \code{target_data} where ID values
will be replaced by their corresponding labels. Defaults to \code{"resp_person"}.}
}
\value{
A character vector of labels corresponding to the values in
\code{target_data[[target_col]]}.
}
\description{
Replaces identifier codes (e.g., numeric or string IDs) in a target dataset
with corresponding descriptive labels (e.g., names) from a lookup table.

This is useful for making datasets more readable, especially when working
with hierarchical or relational data where links are defined by IDs.
}
\details{
The function creates a named lookup vector from the \code{lookup_table}, where
names are IDs and values are labels. It then replaces each value in
\code{target_data[[target_col]]} with the matching label.

Any IDs not found in the lookup table will return \code{NA}. To retain unmatched
IDs, additional NA handling can be added.
}
\examples{
# Example lookup and target data
people <- data.frame(
  id = c(1, 2, 3),
  name_id = c("Alice", "Bob", "Charlie")
)

initiatives <- data.frame(
  resp_person = c(1, 3, 2, 1)
)

# Replace IDs with names
replace_ids_with_labels(
  lookup_table = people,
  id_col = "id",
  label_col = "name_id",
  target_data = initiatives,
  target_col = "resp_person"
)

}
